{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Arcan Documentation","text":"<p>Arcan is an automatic tool for software quality analysis and (Architectural) Technical Debt detection.</p> <p>Arcan helps you keep Technical Debt under control and avoid its shortcomings. The tool analyses\u00a05 programming languages and integrates into your\u00a0CI pipeline\u00a0to ensure that your code continuously meets high-quality standards.</p> <p>The analysis is available for the following programming languages: * Java * C * C++ * C# * Python</p> <p>More languages are coming next!</p>"},{"location":"#architectural-technical-debt","title":"Architectural Technical Debt","text":"<p>The backbone of a software system is its architecture. Software architectures need to continuously update, adapt and change. Software maintenance and evolution become expensive, time-consuming, and sometimes impossible if architecture quality is not continuously assessed. </p> <p>The accumulation of sub-optimal architectural solutions inside a software system results in the growth of Architectural Technical Debt, a segment of a bigger problem (Technical Debt) that costs 500 billion dollars worldwide. </p>  <p>33% of the time of a developer is wasted to manage technical debt.</p>  <p>This problem manifests itself in specific contexts, for instance when there is the need to migrate an obsolete technology or when there is the need to fast scale up the number of features of a software application. However, the deepest sources causing this problem can hardly be detected by hand, and software developers lack the tools to detect them. </p> <p>We offer a platform for automatic source code analysis that assesses the quality of software architectures in a few minutes. Arcan indicates the exact pain points in the code so that developers can fix them and make the code easy to program. The most innovative facet of Arcan is the ability to extract strategic data regarding Architectural Technical Debt so that managers can make informed decisions about software production and optimization. </p>"},{"location":"#architectural-smells","title":"Architectural Smells","text":"<p>A symptom of Architectural Technical Debt is the presence of Architectural Smells, design decisions that negatively impact the system internal quality. Arcan main aim is to automatically detect Architectural Smells, indicate where they are located in code and suggest best practices about how to remove them. Refactoring (removing) Architectural Smells is one of the best way to keep the debt under control and avoid the increase of architectural complexity.</p> <p>Architectural Smells come in different types. Here you can find the updated lists of the ones detected by Arcan, along with the description of the best practices to remove them.</p>"},{"location":"#getting-started","title":"Getting started","text":"<p>To download our 30-days trial, please visit www.arcan.tech. You will need docker installed on your machine to run Arcan, but don't worry! You don\u2019t need to know how Docker works to use Arcan.</p>  <p>You can also have a quick look to the tool with the Arcan online demo.</p>"},{"location":"#resources","title":"Resources","text":"<ul> <li>Quickstart</li> <li>Arcan glossary</li> <li>Guide to results inspection</li> </ul>"},{"location":"#get-a-yearly-license","title":"Get a yearly license","text":"<p>Arcan is distributed on-premise and in the cloud with yearly licence. Pricing depends on the size of the application portfolio to analyse and the number of needed floating licenses.</p> <p>Contact us at info@arcan.tech or leave a message on our website to get a quote.</p>"},{"location":"analyse_project/","title":"Analyse a new project","text":"<p>To analyse a new project, run Arcan and click the ADD NEW button on the top-right corner. </p> <p>Fill the \"Analyse new project\" form in the following way:</p> <ul> <li>Name: indicate the name of the project you want to analyse.</li> <li>Language: select the programming language you want to analyse.</li> <li>Type: Select \"Local project\" for projects residing in the same server where Arcan runs or \"Remote\" for projects residing in a remote repository (e.g., Github repository).</li> </ul>"},{"location":"analyse_project/#analyse-a-remote-repository","title":"Analyse a remote repository","text":"<ul> <li>Choose type \"Remote project\" in the \"Add new project\" page.</li> <li>Paste the url pointing to the remote repository. You can only use HTTPS URL like <code>https://github.com/user/repo.git</code></li> <li>If the repostiory is private and thus requires authentication, tick the \"Project requires authentication\" box.</li> <li>In the case of analysis of a remote repository requiring authentication, you need to create an access token on your repository provider. How to do that depends on the provider you are using. Here some instructions for the most popular ones:</li> <li>Github</li> <li>Gitlab</li> <li>Bitbucket</li> <li>Username: insert here the username you use on the repository provider platform.</li> <li>Password: Insert here the access token you generated.</li> </ul>"},{"location":"analyse_project/#analyse-a-local-repository","title":"Analyse a local repository","text":"<p>In the case of analysis of a local folder, you need to:</p> <ul> <li>Copy the folder you want to analyse into /arcan-trial/projects folder.</li> <li>In the Add New Project form, you must insert <code>./projects/&lt;folder_name&gt;</code></li> </ul>"},{"location":"get_started/","title":"Get Started","text":""},{"location":"get_started/#download-and-install-arcan","title":"Download and Install Arcan","text":"<p>This is the quickstart guide to install and run the first analysis with Arcan. See the complete reference for the alternative installation without Docker.</p>"},{"location":"get_started/#requirements","title":"Requirements","text":"<ul> <li>Docker Engine &gt;= 20.10 (See https://docs.docker.com/engine/install)</li> <li>Docker Compose (See https://docs.docker.com/compose/install/)</li> </ul>"},{"location":"get_started/#how-to-run-arcan-locally","title":"How to run Arcan locally","text":"<ol> <li>Clone or download Arcan from Github. </li> <li>Fill in this form. You will receive the license at the provided email address.</li> <li>Open the email and download the attached <code>ArcanLicence_YYYYMMDD</code> licence file.</li> <li>Copy the <code>ArcanLicence_YYYYMMDD</code> licence file to the licences directory.</li> </ol>"},{"location":"get_started/#configure-the-environment","title":"Configure the environment","text":"<ol> <li>Copy the content of the .env.example file into a new file named <code>.env</code>.</li> <li>Change the value of the variable <code>ARCAN_LICENCE_FILENAME</code> with the name of licence file you copied in the licences directory.</li> </ol>"},{"location":"get_started/#run-arcan","title":"Run Arcan","text":"<ol> <li>To run the Arcan dashboard and the server, open your favourite terminal and navigate to the <code>/arcan-trial</code> folder. Within the folder execute: <code>docker compose up</code>.</li> <li>You will find the dashboard at http://localhost:3000.</li> </ol>"},{"location":"get_started/#create-and-analyse-a-new-project","title":"Create and analyse a new project","text":"<p>Open Arcan dashboard at http://localhost:3000.</p> <p>Click the \"ADD NEW \" button to analyse a new project.</p> <ul> <li>Fill out the form on the \"Add new project\" page with the project's name and the programming language you want to analyse.</li> <li>To analyse a remote project, use the remote repo URL when creating a new project. If the repository is private, remember to use a personal access token as password by ticking the \"Project requires authentication\" box (see How to analyse a remote repository for more info).</li> <li>To analyse a local project, copy the project folder into <code>/arcan-trial/projects</code>. When creating a new project, specify the path to analyse as follows: <code>./projects/&lt;folder_name&gt;</code> (see How to analyse a local repository for more info).</li> <li>In \"Configure analysis\" click on \"ANALYSE\" and then \"CONTINUE\" to trigger the analysis. Once the analysis is completed, you can interact with the project card on the \"My projects\" page.</li> </ul>"},{"location":"glossary/","title":"Glossary","text":""},{"location":"glossary/#glossary","title":"Glossary","text":"<p>Project: the software project that you want to analyse with Arcan. It can be a folder containing source code or a Git repository (local or remote, e.g., hosted on Github).</p> <p>Version: Every time you change something in your project, Arcan tracks a new version. You can run Arcan multiple times on different versions of the same project. Versions can be mapped to commits if you run Arcan on a Git repository.</p> <p>Analysis: a single execution of Arcan. An analysis is associated to a specific project\u2019s version.</p> <p>Page: a page of Arcan which contains dashboards or results</p> <p>Architectural smell: an architectural problem affecting a part of code. See slide #4 for more information.</p> <p>Plot: a graphic showing an insight or result</p> <p>Dependency Graph: the high-level representation of the project\u2019s architecture.  Container and Unit: container=Java Package/ C++ folder; Unit=Java Class/C++ file </p>"},{"location":"inspect_project/","title":"Inspect a project","text":"<p>On the \"My projects\" page, you can find projects' cards. </p>"},{"location":"inspect_project/#project-card","title":"Project card","text":"<p>A project card shows: </p> <ul> <li>(1) TD index: the non-normalized amount of the TD generated by the architectural smells instances detected in the project. The higher the value, the more TD.</li> <li>(2) TD rating: categorizes the TD score ranges into ranked categories ranging from A to F, with F being the worst possible rate (high accumulation of technical debt).</li> <li>(3) TD score: the percentile of the TD density for a benchmark of other systems analyzed by Arcan. The higher the value, the lower the TD density and the better the system's quality.  <p>Example: 75 TD score = system has lower TD density than 75% of the systems in the benchmark.</p>  </li> <li>(4) The trend of Technical Debt over time (green line).</li> <li>(5) The number of smells resulting from the latest analysis.</li> <li>(6) The number of lines of code (LOC) resulting from the latest analysis.</li> </ul> <p>Click on \"INSPECT\" or on the project's name to inspect the analysis results in detail.</p>"},{"location":"inspect_project/#overview-page","title":"Overview page","text":"<p>This page offers an overview of the analysed project's overall quality and Technical Debt.</p> <ul> <li>(1) Technical Debt Dispersion</li> <li>(2) Technical Debt Spread</li> <li>(3) Technical Debt</li> <li>(4) Design Complexity</li> <li>(5) Rigidity</li> <li>(6) Technical Debt Evolution</li> <li>(7) List of analysed versions</li> </ul>"},{"location":"inspect_project/#assessment-page","title":"Assessment page","text":"<p>The table shows the list of architectural smells and some of their characteristics. </p> <p>Each row contains the data of a single instance of Architectural Smell.</p> <p>Click on the name of a column to sort by it.</p> <p>Table description: - (1) ID - (2) Smell Type - (3) Tech debt index - (4) Severity - (5) Affected type - (6) Affected Elements - (7) Size</p> <p>(8) To manipulate the table (e.g., filter results) and download the table data, use the commands on the top-right of the table. (9) Click the arrow on the left to expand the row. Here you can find information about the detection rule applied and the values of the parameters that triggered the smell detection.</p>"},{"location":"inspect_project/#architectural-smell-graph-page","title":"Architectural smell graph page","text":"<p>Click on the pink button with the smell ID to open the graph representation of the Architectural Smell.</p> <p>At the top-left of the page, you can find the controls of the graph.</p> <ul> <li>(1) Reload graph layout</li> <li>(2) Centre graph</li> <li>(3) Turn zoom on/off</li> </ul> <p>At the top-right of the page, you can find additional controls for graph exploration.</p> <ul> <li>(4) Change the layout of the graph</li> <li>(5) Insert the name of a unit or container to quickly find it in the graph.</li> </ul> <p>(6) Click either an edge or a node to show the source code. The code causing the smell and that should be refactored is highlighed in red.</p>"},{"location":"inspect_project/#comprehension-page","title":"Comprehension page","text":""},{"location":"inspect_project/#graph-settings","title":"Graph settings","text":"<p>(1) On this page, you can select the specific parts of code that you want to plot in the graph. (2) Use SELECT ALL and UNSELECT ALL to select or unselect all the project's components quickly.</p> <p>(3) You can choose the types of components and dependencies to display on the right. </p> <p>Once the configuration is set up, click on the \"Graph\" tab to show the graph.</p>"},{"location":"inspect_project/#graph","title":"Graph","text":"<p>This page offers a high-level representation of the software architecture of the project under analysis. Depending on the settings you choose, you can produce different architectural views.</p> <p>Use ctrl + left mouse click to select and drag portions of graph.</p> <p>At the top-left of the page, you can find the controls of the graph.</p> <ul> <li>(1) Reload graph layout</li> <li>(2) Centre graph</li> <li>(3) Turn zoom on/off</li> </ul> <p>At the top-right of the page, you can find additional controls for graph exploration.</p> <ul> <li>(4) Change the layout of the graph</li> <li>(5) Insert the name of a unit or container to quickly find it in the graph.</li> </ul> <p>(6) Click a node to open the \"Neighbour graph\", that is a portion of the graph containing only the nodes next (depht=1) to the selected node.</p>"},{"location":"inspect_project/#neighbour-graph","title":"Neighbour graph","text":""},{"location":"inspect_project/#architectural-views","title":"Architectural views","text":"<p>We recommend the following settings instructions to generate a set of Architectural Views.</p> <p>Project tree Useful to investigate how the project\u2019s containers are nested one inside the other.</p> <ul> <li>Graph settings</li> <li>Graph layout: KLAY</li> </ul>  <p>Project container dependencies Useful to investigate the dependencies between different project\u2019s containers.</p> <ul> <li>Graph settings</li> <li>Graph layout: GRID</li> </ul>  <p>Project unit hierarchies Useful to investigate how the project\u2019s containers are nested one inside the other.</p> <ul> <li>Graph settings</li> <li>Graph layout: KLAY</li> </ul>  <p>Project unit usage Useful to identify the most used units of the project.</p> <ul> <li>Graph settings</li> <li>Graph layout: CONCENTRIC</li> </ul>"},{"location":"installation/","title":"Install Arcan","text":""},{"location":"installation/#requirements-for-native-docker-execution-mode","title":"Requirements for native Docker execution mode","text":"<ul> <li>Docker Engine &gt;= 20.10 (See https://docs.docker.com/engine/install)</li> <li>Docker Compose (See https://docs.docker.com/compose/install/)</li> </ul>"},{"location":"installation/#requirements-for-vm-based-docker-execution-mode-using-vagrant","title":"Requirements for VM-based Docker execution mode using Vagrant","text":"<ul> <li>Vagrant</li> <li>VirtualBox</li> </ul>"},{"location":"installation/#how-to-run-arcan-locally","title":"How to run Arcan locally","text":"<p>First, Clone or download Arcan from Github. Then, follow the instructions below.</p>"},{"location":"installation/#obtain-the-licence-file","title":"Obtain the licence file","text":"<ul> <li>Fill in this form. You will receive the license at the provided email address.</li> <li>Open the email and download the attached <code>ArcanLicence_YYYYMMDD</code> licence file.</li> <li>Copy the <code>ArcanLicence_YYYYMMDD</code> licence file to the licences directory.</li> </ul>"},{"location":"installation/#configure-the-environment","title":"Configure the environment","text":"<ul> <li>Copy the content of the .env.example file into a new file named <code>.env</code>.</li> <li>Change the value of the variable <code>ARCAN_LICENCE_FILENAME</code> with the name of licence file you copied in the licences directory.</li> </ul>"},{"location":"installation/#run-arcan-with-native-docker-execution-mode","title":"Run Arcan with native Docker execution mode","text":"<ul> <li>To run the Arcan dashboard and the server, open your favourite terminal and navigate to the <code>/arcan-trial</code> folder. Within the folder execute: <code>docker compose up</code>.</li> <li>You will find the dashboard at http://localhost:3000.</li> <li>To analyse a remote project, simply use the remote repo url when creating a new project. If the repo is private, remember to use a personal access token as password (see the documentation for more info).</li> <li>To analyse a local project, copy the project folder into <code>/arcan-trial/projects</code>. When creating a new project, specify the path to analyse as follows: <code>./projects/&lt;folder_name&gt;</code>  (see the documentation for more info).</li> </ul>"},{"location":"installation/#run-arcan-with-vm-based-docker-execution-mode-using-vagrant","title":"Run Arcan with VM-based Docker execution mode using Vagrant","text":"<ul> <li>To run the Arcan dashboard and the server, open your favourite terminal and navigate to the <code>/arcan-trial</code> folder. Within the folder execute: <code>vagrant up</code>.</li> <li>You will find the dashboard at http://localhost:3000.</li> <li>To analyse a remote project, use the remote repo URL when creating a new project. If the repository is private, remember to use a personal access token as password by ticking the \"Project requires authentication\" box (see How to analyse a remote repository for more info).</li> <li>To analyse a local project, copy the project folder into <code>/arcan-trial/projects</code>. When creating a new project, specify the path to analyse as follows: <code>./projects/&lt;folder_name&gt;</code> (see How to analyse a local repository for more info).</li> </ul>"},{"location":"installation/#optional","title":"Optional","text":"<p>Should you need to update to the latest Arcan version: - Open the <code>.env</code> file. Change the value of the variable <code>ARCAN_DASHBOARD_VERSION</code> with the latest Arcan dashboard version tag. You can find the latest version here. - Change the value of the variable <code>ARCAN_SERVER_VERSION</code> with the latest Arcan server version tag. You can find the latest version here.</p>"}]}